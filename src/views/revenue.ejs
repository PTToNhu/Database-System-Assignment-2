<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Revenue Filter</title>

    <!-- CSS File -->
    <link rel="stylesheet" href="/css/revenue.css">
</head>

<body>

    <!-- Navigation Bar -->
    <nav>
        <a href="/">Home</a>
        <a href="/invoice">Invoice</a>
        <a href="/revenue" class="active">Revenue</a>
    </nav>

    <!-- Filter Form -->
    <form id="revenueFilterForm" class="revenue-filter-form" action="/revenue" method="POST">
        <h1>Filter Revenue by Minimum Revenue and Invoice Count</h1>
        <label for="startDate">Start Date:</label>
        <input type="date" id="startDate" name="startDate" required>

        <label for="endDate">End Date:</label>
        <input type="date" id="endDate" name="endDate" required>

        <label for="minRevenue">Minimum Revenue:</label>
        <input type="number" id="minRevenue" name="minRevenue" value="0" min="0" required>

        <label for="minInvoices">Minimum Invoice Count:</label>
        <input type="number" id="minInvoices" name="minInvoices" value="0" min="0" required>

        <div class="radio-group">
            <label for="sortByProfit">Sort by Total Amount:</label>
            <div>
                <input type="radio" id="ascending" name="sortByProfit" value="1" required>
                <label for="ascending">Ascending</label>
            </div>
            <div>
                <input type="radio" id="descending" name="sortByProfit" value="0" required>
                <label for="descending">Descending</label>
            </div>
        </div>

        <button type="submit">Filter</button>
    </form>

    <% if (lists && lists.length> 0) { %>
        <% if (lists[0].hasOwnProperty('Message')) { %>
            <h2 class="h2-title">
                <%= lists[0].Message %>
            </h2>
            <% } else { %>
                <h1 class="h1-title">Revenue Table</h1>
                <table class="revenue-invoice-table">
                    <thead>
                        <tr>
                            <th>Branch Code</th>
                            <th>Branch Name</th>
                            <th>Address</th>
                            <th>Total Invoices</th>
                            <th>Revenue</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% lists.forEach(row=> { %>
                            <tr>
                                <td>
                                    <%= row.MACHINHANH %>
                                </td>
                                <td>
                                    <%= row.TENCHINHANH %>
                                </td>
                                <td>
                                    <%= row.DIACHI %>
                                </td>
                                <td>
                                    <%= row.TONGSOHOADON %>
                                </td>
                                <td>
                                    <%= Number.isInteger(row.DOANHTHU) ? row.DOANHTHU : row.DOANHTHU.toFixed(1) %>
                                </td>
                            </tr>
                            <% }) %>
                    </tbody>
                </table>
                <% } %>
                    <% } %>

                        <script>
                            // Populate form with saved data from localStorage
                            document.addEventListener('DOMContentLoaded', () => {
                                const startDateInput = document.getElementById('startDate');
                                const endDateInput = document.getElementById('endDate');
                                const minRevenueInput = document.getElementById('minRevenue');
                                const minInvoicesInput = document.getElementById('minInvoices');

                                const savedStartDate = localStorage.getItem('startDate');
                                const savedEndDate = localStorage.getItem('endDate');
                                const savedMinRevenue = localStorage.getItem('minRevenue');
                                const saveminInvoices = localStorage.getItem('minInvoices');

                                if (savedStartDate) {
                                    startDateInput.value = savedStartDate;
                                }
                                if (savedEndDate) {
                                    endDateInput.value = savedEndDate;
                                }
                                if (savedMinRevenue) {
                                    minRevenueInput.value = savedMinRevenue;
                                }
                                if (saveminInvoices) {
                                    minInvoicesInput.value = saveminInvoices;
                                }
                            });

                            document.getElementById('revenueFilterForm').addEventListener('submit', async function (event) {

                                localStorage.setItem('startDate', this.startDate.value);
                                localStorage.setItem('endDate', this.endDate.value);
                                localStorage.setItem('minRevenue', this.minRevenue.value);
                                localStorage.setItem('minInvoices', this.minInvoices.value);

                                const ascendingInput = document.getElementById('ascending');
                                const descendingInput = document.getElementById('descending');

                                let sortByProfitValue = null;

                                // Kiểm tra xem có checkbox nào được chọn không
                                if (ascendingInput.checked) {
                                    sortByProfitValue = 1; // Nếu chọn Ascending
                                } else if (descendingInput.checked) {
                                    sortByProfitValue = 0; // Nếu chọn Descending
                                }

                                // Lưu giá trị vào localStorage
                                localStorage.setItem('sortByProfit', sortByProfitValue);

                                // Xử lý dữ liệu form
                                const formData = new FormData(this);
                                formData.set('sortByProfit', sortByProfitValue); // Ghi đè giá trị cho sortByProfit

                                const formObject = {};
                                formData.forEach((value, key) => {
                                    formObject[key] = value;
                                });

                                console.log('Form data:', formObject);

                                // Gửi request
                                try {
                                    const response = await fetch(this.action, {
                                        method: this.method,
                                        body: formData,
                                    });

                                    if (response.ok) {
                                        const result = await response.text();
                                        document.body.innerHTML = result;
                                    } else {
                                        console.error('Error sending request:', response.statusText);
                                    }
                                } catch (error) {
                                    console.error('Request error:', error);
                                }
                            });

                        </script>
</body>

</html>